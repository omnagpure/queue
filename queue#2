#include <iostream>
using namespace std;
#define n 5
class queue{
    int* arr;
    int front;
    int rear;
    
public:
    queue(){
        arr=new int[n];
        front=-1;
        rear=-1;
    }

//enque(push)
void enque(int x){
    if(rear==n-1){
        cout<<"queue overflow"<<endl;
        return;
    }
    rear++;
    arr[rear]=x;
    if(front==-1){
        front++;
        }
}

    
//deque(pop)
void deque(){
    if(front==-1 || front>rear){
        cout<<"queue is empty"<<endl;
        return ;
    }
    front++;
   
}

//peek
int peek(){
    if(front==-1 || front>rear){
        cout<<"queue is empty"<<endl;
        return -1;
    }
    return arr[front];
}

//display
void display(){
     if(front==-1 || front>rear){
        cout<<"queue is empty"<<endl;
        return ;
    }
    cout<<"queue elements"<<" ";
    if(rear>=front){
        for(int i=front;i<=rear;i++){
            cout<<arr[i]<<endl;
        }
    }
}

};
int main(){
    queue q;
    q.enque(23);
    q.enque(54);
    q.enque(67);
    q.enque(78);
    q.display();
    cout<<"first elements"<<endl;
    cout<<q.peek()<<endl;
    q.deque();
    cout<<q.peek()<<endl;
    q.deque();
    q.display();
    cout<<q.peek()<<endl;
    q.deque();
    cout<<q.peek()<<endl;
    q.deque();
    cout<<q.peek()<<endl;
    
    return 0;
}
